{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["getAll","a","fetch","response","json","getUserById","id","TodoList","state","query","filterBy","onUserSelected","userId","props","selectedUserId","selectUser","handleSearch","event","setState","target","value","toLowerCase","getFilteredTodos","todos","filter","todo","title","includes","handleSelectorInput","this","visibleTodos","completed","className","type","placeholder","onChange","map","classNames","checked","readOnly","onClick","React","Component","CurrentUser","user","loadUser","prevProps","clearUser","name","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5540738.chunk.js","sourcesContent":["export async function getAll(): Promise<Todo[]> {\n  const response = await fetch('https://mate.academy/students-api/todos');\n\n  return response.json();\n}\n\nexport async function getUserById(id: number): Promise<User> {\n  const response = await fetch(`https://mate.academy/students-api/users/${id}`);\n\n  return response.json();\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (userId: number) => void;\n  selectedUserId: number;\n};\n\ntype State = {\n  query: string;\n  filterBy: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    query: '',\n    filterBy: 'all',\n  };\n\n  onUserSelected = (userId: number) => {\n    if (userId === this.props.selectedUserId) {\n      return null;\n    }\n\n    return this.props.selectUser(userId);\n  };\n\n  handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      query: event.target.value.toLowerCase(),\n    });\n  };\n\n  getFilteredTodos = () => (\n    this.props.todos.filter(todo => todo.title.toLowerCase().includes(this.state.query))\n  );\n\n  handleSelectorInput = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      filterBy: event.target.value,\n    });\n  };\n\n  render() {\n    const { filterBy } = this.state;\n\n    let visibleTodos = this.getFilteredTodos();\n\n    visibleTodos = visibleTodos.filter(todo => {\n      switch (filterBy) {\n        case 'all':\n          return todo;\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return 0;\n      }\n    });\n\n    return (\n\n      <div className=\"TodoList\">\n        <h2 className=\"subtitle pb-2\">Todos:</h2>\n        <div className=\"control pb-2\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"input\"\n            placeholder=\"Search by title\"\n            value={this.state.query}\n            onChange={this.handleSearch}\n          />\n        </div>\n\n        <section className=\"select is-info\">\n          <select\n            value={filterBy}\n            onChange={this.handleSelectorInput}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </section>\n\n        <div className=\"TodoList__list-container pt-2\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map((todo) => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                  {\n                    'TodoList__item--checked': todo.completed,\n                  })}\n              >\n                <input type=\"checkbox\" checked={todo.completed} readOnly />\n                <p>{todo.title}</p>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => this.onUserSelected(+todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport { getUserById } from '../../api/api';\n\ntype State = {\n  user: User | null;\n};\n\ntype Props = {\n  userId: number;\n  clearUser: () => void;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const { userId } = this.props;\n    const user = await getUserById(userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser box\">\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user?.id}`}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n        <p className=\"CurrentUser__email\">{user?.email}</p>\n        <p className=\"CurrentUser__phone pb-2\">{user?.phone}</p>\n\n        <button\n          className=\"button is-danger\"\n          type=\"button\"\n          onClick={clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport { getAll } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getAll();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId: number) => (\n    this.setState({ selectedUserId: userId })\n  );\n\n  clearUser = () => (\n    this.setState({ selectedUserId: 0 })\n  );\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}