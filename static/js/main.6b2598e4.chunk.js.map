{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["getAll","a","fetch","response","json","getUserById","id","TodoList","onUserSelected","userId","props","selectedUserId","selectUser","this","visibleTodos","query","filterBy","handleSearch","handleSelectorInput","className","type","placeholder","value","onChange","map","todo","classNames","completed","checked","readOnly","title","onClick","React","PureComponent","CurrentUser","state","user","loadUser","prevProps","setState","clearUser","name","email","phone","Component","App","todos","event","target","toLowerCase","getFilteredTodos","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b2598e4.chunk.js","sourcesContent":["export async function getAll(): Promise<Todo[]> {\n  const response = await fetch('https://mate.academy/students-api/todos');\n\n  return response.json();\n}\n\nexport async function getUserById(id: number): Promise<User> {\n  const response = await fetch(`https://mate.academy/students-api/users/${id}`);\n\n  return response.json();\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  visibleTodos: Todo[],\n  selectedUserId: number;\n  query: string;\n  filterBy: string;\n  selectUser: (userId: number) => void;\n  handleSearch: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleSelectorInput: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport class TodoList extends React.PureComponent<Props, {}> {\n  onUserSelected = (userId: number) => {\n    if (userId === this.props.selectedUserId) {\n      return null;\n    }\n\n    return this.props.selectUser(userId);\n  };\n\n  render() {\n    const {\n      visibleTodos,\n      query,\n      filterBy,\n      handleSearch,\n      handleSelectorInput,\n    } = this.props;\n\n    return (\n\n      <div className=\"TodoList\">\n        <h2 className=\"subtitle pb-2\">Todos:</h2>\n        <div className=\"control pb-2\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"input\"\n            placeholder=\"Search by title\"\n            value={query}\n            onChange={handleSearch}\n          />\n        </div>\n\n        <div className=\"select is-info\">\n          <select\n            value={filterBy}\n            onChange={handleSelectorInput}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"TodoList__list-container pt-2\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map((todo) => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  })}\n              >\n                <input type=\"checkbox\" checked={todo.completed} readOnly />\n                <p>{todo.title}</p>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => this.onUserSelected(+todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport { getUserById } from '../../api/api';\n\ntype State = {\n  user: User | null;\n};\n\ntype Props = {\n  userId: number;\n  clearUser: () => void;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const { userId } = this.props;\n    const user = await getUserById(userId) || null;\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser, userId } = this.props;\n\n    return (\n      <div className=\"CurrentUser box\">\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${userId}`}</span></h2>\n\n        {user && (\n          <>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone pb-2\">{user.phone}</p>\n          </>\n        )}\n\n        <button\n          className=\"button is-danger\"\n          type=\"button\"\n          onClick={clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport { getAll } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n  query: string;\n  filterBy: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n    query: '',\n    filterBy: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await getAll();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId: number) => (\n    this.setState({ selectedUserId: userId })\n  );\n\n  clearUser = () => (\n    this.setState({ selectedUserId: 0 })\n  );\n\n  handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      query: event.target.value.toLowerCase(),\n    });\n  };\n\n  handleSelectorInput = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      filterBy: event.target.value,\n    });\n  };\n\n  getFilteredTodos = () => (\n    this.state.todos.filter(todo => todo.title.toLowerCase().includes(this.state.query))\n  );\n\n  render() {\n    const { selectedUserId, filterBy, query } = this.state;\n\n    let visibleTodos = this.getFilteredTodos();\n\n    visibleTodos = visibleTodos.filter(todo => {\n      switch (filterBy) {\n        case 'all':\n          return todo;\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return 0;\n      }\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            visibleTodos={visibleTodos}\n            selectedUserId={selectedUserId}\n            query={query}\n            filterBy={filterBy}\n            selectUser={this.selectUser}\n            handleSearch={this.handleSearch}\n            handleSelectorInput={this.handleSelectorInput}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}